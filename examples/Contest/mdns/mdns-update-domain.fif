#!/usr/bin/fift -s
"TonUtil.fif" include
"Asm.fif" include

{ ."usage: " @' $0 type ." dnsaddress domain_name privkey_file_base seqno save_file num_of_added_dnsrecords num_of_removed_dnsrecords [ category, data ] [ category ]" cr
  "Generate external message for domain update" cr
  1 halt
} : usage

$# 0 > { 1 $() dup "--help" $= swap "-h" $= or ' usage if } if
$# 7 < ' usage if

true =: bounce
$1 bounce parse-load-address =: bounce 2=: dest_addr
$2 =: domain_name
$3 =: file_base
$4 parse-int =: seqno
$5 =: output
$6 parse-int =: add_records_num
$7 parse-int =: rm_records_num


dictnew
0
{
  // dictnew counter
  dup dup
  8 + $() parse-int // dictnew counter counter category
  swap
  9 + $() // dictnew counter category data
  <b swap $, b> <s
  swap // dictnew counter data category
  3 roll // counter data category dictnew 
  16
  idict! drop // counter dict
  swap
  2 +
} add_records_num times
swap
=: dns_records_to_add

dns_records_to_add <s csr.

dictnew
swap
{
  // dictnew counter
  dup
  8 + $() parse-int // dictnew counter category
  <b b> <s
  swap // dictnew counter data category
  3 roll // counter data category dictnew 
  16
  idict! drop // counter dict
  swap
  1 +
} rm_records_num times
drop
=: dns_records_to_remove

file_base +".pk" load-generate-keypair
constant wallet1_privk
256 B>u@ constant wallet1_pubk

<b dns_records_to_add dict, dns_records_to_remove dict, b> =: records_update
<b dictnew dict, dictnew dict, b> =: domains_update

<b seqno 32 u, 2 8 u, <b domain_name $, b> ref, records_update ref, domains_update ref, b> =: message_body
message_body hashu wallet1_privk ed25519_sign_uint =: signature
<b signature B, message_body <s s, b> =: full_message 


<b b{1000100} s, dest_addr addr, 0 Gram, b{00} s, full_message ref, b> 
2 boc+>B dup Bx. cr
output +".boc" tuck B>file
."(Saved to file " type .")" cr

